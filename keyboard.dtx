% \iffalse
%% File: keyboard.dtx by Dennis Heidsiek, mail: HeidsiekB at aol dot com
%%
%% You can get the latest version at http://github.com/zephyr/latex-keyboard
%%
%<*driver>
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
\input docstrip.tex
\askforoverwritefalse
\preamble

THIS IS A AUTOMATICALLY GENERATED FILE CONTAINING EXPERIMENTAL CODE.

Do not distribute this file without also distributing the source files specified above.

Do not distribute a modified version of this file under the same name.

\endpreamble
\postamble
\endpostamble
\keepsilent
\generate{\file{keyboard.sty}{\from{keyboard.dtx}{package}}}
\generate{\file{keyboard-demo.tex}{\from{keyboard.dtx}{sample}}}

\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi

\documentclass{gmdocc}
\usepackage[inline, visible]{gmdoc-enhance} % provides ›real‹ comments with %! in the implementation
\def\marginpartt{\scriptsize\ttfamily}  % needed fix for XeTeX because of problems with the lmodern font.
\GetFileInfo{keyboard.sty}
\RecordChanges

\usepackage{
  xltxtra,
  polyglossia,
  hyperref
}

\DeleteShortVerb\| % Fix for TikZ
\usepackage{keyboard}
\MakeShortVerb\| % Restore it

\hypersetup{
  pdfborder= 0 0 0,
  colorlinks=true,
  linkcolor=blue
}
\setmainlanguage{english}
\setotherlanguage{german}

\newcommand{\email}[1]{\href{mailto:#1}{#1}} % Why is this not in hyperref?
\newcommand{\githubuser}[4]{#1 \textsc{#2}\footnote{Follow or fork #1 at GitHub: \url{http://github.com/#3}}\\\email{#4}}

\title{The |keyboard| package\footnote{\filenote}}

\author{%
\githubuser{Dennis}{Heidsiek}{zephir}{HeidsiekB@aol.com}\and
\githubuser{Christian}{Kluge}{frakturfreak}{ckfrakturfreak@web.de}
}

\begin{document}
\maketitle
\begin{abstract}
This is the documentation of the \LaTeXe\ package \pk{keyboard}. It provides a single command to typeset a special keyboard layout which has to be specified on a character base, using a |key=value| interface. If you find any incompatiblities with any package, please send me an e-mail and maybe I can take care of it.\\
\begin{center}\keyboard{}\end{center}
\end{abstract}

\tableofcontents

\section{Commands for the user}
The package is loaded as usual:
\begin{quote}
  |\usepackage{gmdoc-enhance}|
\end{quote}
currently without any optional arguments. Please notice that this will also load \pk{TikZ} in the background, which is a quite \emph{heavy} (but equally useful!) package.

The main command to typeset a single keyboard is \TextUsage{\keyboard}\arg[style]{content}.

For further informations, just look at the examples in the file \file{keyboard-demo.tex}!
%ToDo: Read gmdocc ;) to make a more proper documentation.


\section{Further Development}
While this package satisfies its original purpose\footnote{To provide images of the \href{http://neo-layout.org/}{Neo keyboard layout} for an \href{http://github.com/alt/neo-article}{article} in \href{http://www.dante.de/DTK.html}{\textgerman{Die TeXnische Komödie}}.}, there’re still many ideas how it could be improved. \emph{Feedback is desired!}

\subsection{Key naming conventing}
The current naming convention of the keys is based on the Neo keyboard layout, which is (sad but true) unusual for the average user. So we need a better one: Based on qwerty or qwertz? Numerical – one-dimensional (1–40) or two-dimensional (1/1, 1/2, 1/3, …, 2/1, 2/2, …, 4/13)? Maybe Linux scancodes or keysyms? It should be memorizeable, more or less layout-independent, and use short (maybe even equally long?) keys.

\subsection{Generalized hook creation}
A hook can style a whole bunch of keys simultaneously, which is a powerful concept to avoid redundancy. Currently, there are three hooks (|centerhook|, |homerowhook| and |nonneoglyphhook|), but they are “hard coded”, so there is no possibility to easily create new hooks: one \emph{should} can do somethink like |\newkeybordhook{leftringfinger}{oe,i,v,nii}|.

\subsection{Revised user interface}
In general, the whole user interface should become more intuitive and the content should be separated from the style. The package should provide some high level commands, but without losing the possibility to change or define everythink by hand. At best, all of this should be combined, for example:
\begin{verbatim}
\keyboardset{ % global standard values
   style=hackerterminal, % green monospace font onto black background
   thickness=2pt % but really really bold!
}
\end{verbatim}
and then |\keyboard[localstyle]{content}|, for example:
\begin{verbatim}
\keyboard{named=neo2layer1}
% …
\keyboard[
   style=lucidwhite % at the end, we have to rest our green ink ;)
]{
   named=neo2layer6,
   space={¡Neo based geek math rulz!}
}
\end{verbatim}

\subsection{Provide standard styles and layouts}
One should provide a bunch of ready-to-use usable styles (like colored, graystyle, only black and white, …) and well known standard keyboard layouts like
\begin{description}
\item[Neo 2] (all layers)
\item[Neo 1.1]
\item[Neo 1]
\item[Qwertz] and its various language-specific variants
\item[Qwerty] and its various language-specific variants
\item[Azerty]
\item[Turkish-F]
\item[Dvorak]
\item[Colemak]
\item[Bépo]
\item[…]
\end{description}
At least every layout mentioned at \url{http://en.wikipedia.org/wiki/Keyboard_layout} should be a potential candidate for inclusion.

\subsection{Keypad and other missing keys}
One could also extend this package to draw the keypad (as own graphic or integrated with the main keypad), function keys (Escape, F1–F12, …, arrow keys, …) and so on. On the other hand, it should definitive \emph{not} include every non-standard key of a laptop keyboard or a start-my-calculator key. The focus of this package is to provide a simple generic \emph{standard} keyboard.

\subsection{Tentative roadmap}
\begin{description}
\item[v0.1] Initial release.
\item[v0.2] Revised user interface, breaking compatibility.
\item[v0.3—v0.7] Implementing most of the mentioned missing features:
\begin{itemize}
\item Decide the Key naming conventing issue,
\item Generalized hooks,
\item include more standard keyboard layout,
\item …
\end{itemize}
\item[v0.8] First stabilisation release: No more new features, clean up and remove legacy code, move focus to bug fixing.
\item[v0.9] Second stabilisation release: Work on the documentation and further bug fixing.
\item[v1.0] First Release to \textsc{Ctan} and introduction to a broader audience.\footnote{I ogle with a article for the \textsc{TugBoat}.}
\item[v1.1] Incubating feedback, start to consider/work on new features.
\item[…] |\relax| ;)
\end{description}

\section{Implementation}
\DocInput{keyboard.dtx}
\PrintChanges\PrintIndex
\end{document}
%</driver>
%
%<*package>
% \fi
% Let us dive into the implementation:
% \begin{macrocode}

%\subsection{Requirements}
\NeedsTeXFormat{LaTeX2e}
% For the graphic stuff:
\RequirePackage{tikz}
% For parsing |key=value| input:
\RequirePackage{pgfkeys}

%\subsection{Version history}
\ProvidesPackage{keyboard}[2010/04/14 v0.2 Drawing of keyboard layouts]

%\ChangesStart{v0.1}{2010/04/05}
%\changes{v0.1}{2010/04/05}{Initial experimental version.}
%\changes{v0.1b}{2010/04/06}{Implementation is now working.}
%\changes{v0.1c}{2010/04/06}{New options: \env{textscale} and \env{thickness}.}
%\changes{v0.1d}{2010/04/06}{Corrected wrong named option: \env{del} → \env{bsp} (Backspace).}
%\changes{v0.1e}{2010/04/07}{New options: \env{centerhook}, \env{homerowhook} and \env{nonneoglyphhook}.}
%\changes{v0.1f}{2010/04/07}{New options: \env{rectangularenter} and \env{smallshift}.}
%\changes{v0.1g}{2010/04/14}{Expanded the documentation and added planning for the further development.}
%\changes{v0.2}{2010/04/14}{Changed main command: \cs{drawkeyboard}\arg{options} → \cs{keyboard}\arg[style]{content}, breaking compatibility.}

%\subsection{Data structures}

% Provide if-structures for layout options for enter and shift:
\newif\ifkeyboard@enterisrectangular
\newif\ifkeyboard@shiftissmall

% Next, we explain how the |key=value| input should be processed and stored into the tree provided by |pgfpages|.

% How to process the style options:
\pgfkeys{
  /keyboard/style/.cd,
  thickness/.store in = \keyboard@thickness,
  basesize/.store in = \keyboard@bs,
  textscale/.store in = \keyboard@textscale,
  color/.store in = \keyboard@color,
  colour/.style = {color=#1},
  fillcolor/.store in = \keyboard@fillcolor,
  fillcolour/.style = {fillcolor=#1},
  drawcolor/.store in = \keyboard@drawcolor,
  drawcolour/.style = {drawcolor=#1},
  centerhook/.store in = \keyboard@hook@c,
  homerowhook/.store in = \keyboard@hook@hr,
  nonneoglyphhook/.store in = \keyboard@hook@nng,
  rectangularenter/.is if=keyboard@enterisrectangular,
  smallshift/.is if=keyboard@shiftissmall
}

% Every key gets a own macro to hold its content:
\pgfkeys{
  /keyboard/content/.cd,
  strgl/.store in = \keyboard@strgl,
  osl/.store in = \keyboard@osl,
  altl/.store in = \keyboard@altl,
  space/.store in = \keyboard@space,
  altr/.store in = \keyboard@altr,
  osr/.store in = \keyboard@osr,
  menu/.store in = \keyboard@menu,
  strgr/.store in = \keyboard@strgr,
  miil/.store in = \keyboard@miil,
  mivl/.store in = \keyboard@mivl,
  ue/.store in = \keyboard@ue,
  oe/.store in = \keyboard@oe,
  ae/.store in = \keyboard@ae,
  p/.store in = \keyboard@p,
  z/.store in = \keyboard@z,
  b/.store in = \keyboard@b,
  m/.store in = \keyboard@m,
  comma/.store in = \keyboard@comma,
  dot/.store in = \keyboard@dot,
  j/.store in = \keyboard@j,
  miir/.store in = \keyboard@miir,
  miiil/.store in = \keyboard@miiil,
  u/.store in = \keyboard@u,
  i/.store in = \keyboard@i,
  a/.store in = \keyboard@a,
  e/.store in = \keyboard@e,
  o/.store in = \keyboard@o,
  s/.store in = \keyboard@s,
  n/.store in = \keyboard@n,
  r/.store in = \keyboard@r,
  t/.store in = \keyboard@t,
  d/.store in = \keyboard@d,
  y/.store in = \keyboard@y,
  miiir/.store in = \keyboard@miiir,
  tab/.store in = \keyboard@tab,
  x/.store in = \keyboard@x,
  v/.store in = \keyboard@v,
  l/.store in = \keyboard@l,
  c/.store in = \keyboard@c,
  w/.store in = \keyboard@w,
  k/.store in = \keyboard@k,
  h/.store in = \keyboard@h,
  g/.store in = \keyboard@g,
  f/.store in = \keyboard@f,
  q/.store in = \keyboard@q,
  sz/.store in = \keyboard@sz,
  tiii/.store in = \keyboard@tiii,
  enter/.store in = \keyboard@enter,
  ti/.store in = \keyboard@ti,
  ni/.store in = \keyboard@ni,
  nii/.store in = \keyboard@nii,
  niii/.store in = \keyboard@niii,
  niv/.store in = \keyboard@niv,
  nv/.store in = \keyboard@nv,
  nvi/.store in = \keyboard@nvi,
  nvii/.store in = \keyboard@nvii,
  nviii/.store in = \keyboard@nviii,
  nix/.store in = \keyboard@nix,
  zero/.store in = \keyboard@zero,
  dash/.store in = \keyboard@dash,
  tii/.store in = \keyboard@tii,
  bsp/.store in = \keyboard@bsp
}

%\subsection{Prefabricated styles}
% Define the \emph{s}tyles with are usable out of the box.

%\subsubsection{default}
\newcommand*{\keyboard@s@default}{
\pgfkeys{
  /keyboard/style/.cd,
  thickness=0.8pt, % the TikZ manual’s definition of thick
  basesize = 0.175cm, % the size of a single quadratic key
  textscale = 1.0, % same size as surrounding text
  color = black,
  fillcolor = black!10,
  drawcolor = black,
  rectangularenter=false,
  smallshift=true,
  centerhook = {},
  homerowhook = {},
  nonneoglyphhook = {}
}}

%\subsubsection{test}
\newcommand*{\keyboard@s@test}{
\pgfkeys{
  /keyboard/style/.cd,
  fillcolor = green!20,
  drawcolor = yellow!30!black
}}


%\subsection{Prefabricated layouts}
% Define the \emph{c}ontent of the keyboard layouts with are usable out of the box.

%\subsubsection{empty}
\newcommand*{\keyboard@c@empty}{
\pgfkeys{
  /keyboard/content/.cd,
  strgl={},
  osl={},
  altl={},
  space={},
  altr={},
  osr={},
  menu={},
  strgr={},
  miil={},
  mivl={},
  ue={},
  oe={},
  ae={},
  p={},
  z={},
  b={},
  m={},
  comma={},
  dot={},
  j={},
  miir={},
  miiil={},
  u={},
  i={},
  a={},
  e={},
  o={},
  s={},
  n={},
  r={},
  t={},
  d={},
  y={},
  miiir={},
  tab={},
  x={},
  v={},
  l={},
  c={},
  w={},
  k={},
  h={},
  g={},
  f={},
  q={},
  sz={},
  tiii={},
  enter={},
  ti={},
  ni={},
  nii={},
  niii={},
  niv={},
  nv={},
  nvi={},
  nvii={},
  nviii={},
  nix={},
  zero={},
  dash={},
  tii={},
  bsp={}
}}

%\subsection{Package defaults}
% By default, use the |default| style with |empty| content:
\keyboard@s@default
\keyboard@c@empty

%\subsection{Helper macros for drawing keys}

%Define two optical styles:
\tikzstyle{keyboardkey}=[line width=\keyboard@thickness, color=\keyboard@drawcolor, fill=\keyboard@fillcolor]
\tikzstyle{keyboardtext}=[anchor=base, color=\keyboard@color, scale=\keyboard@textscale]

% Typsets a single key, centered arround |x|, |y| of width |w|, height |h| with content |c|:
\newcommand*{\keyboard@key}[5]{
\draw (#1*\keyboard@bs,#2*\keyboard@bs)
  node[draw, minimum width=#3*\keyboard@bs, minimum height=#4*\keyboard@bs, rectangle, keyboardkey] {}
  node[keyboardtext, yshift=-0.7*\keyboard@bs] {#5}
  ;
}

% Typsets a single normal quadratic key, centered arround |x|, |y| with content |c|:
\newcommand{\keyboard@nkey}[3]{\keyboard@key{#1}{#2}{4}{4}{#3}}

% Typsets the nonrectangular enter key with content |c|:

\newcommand{\keyboard@ekey}[1]{%
\filldraw[keyboardkey]
 (54*\keyboard@bs,16*\keyboard@bs) --
 (60*\keyboard@bs,16*\keyboard@bs) --
 (60*\keyboard@bs,8*\keyboard@bs) --
 (55*\keyboard@bs,8*\keyboard@bs) --
 (55*\keyboard@bs,12*\keyboard@bs) --
 (54*\keyboard@bs,12*\keyboard@bs) --
 cycle node[keyboardtext, xshift=3.5*\keyboard@bs, yshift=-0.5*\keyboard@bs] {#1}
 ;
}

% Draws a keyboard with the given parameters:
\newcommand*{\keyboard@apply}{%
\begin{tikzpicture}
\begin{scope}

% strgl row:
\keyboard@key{3}{2}{6}{4}{\keyboard@hook@nng{\keyboard@strgl}}
\keyboard@key{8}{2}{4}{4}{\keyboard@hook@nng{\keyboard@osl}}
\keyboard@key{13}{2}{6}{4}{\keyboard@hook@nng{\keyboard@altl}}
\keyboard@key{27}{2}{22}{4}{\keyboard@space}

\keyboard@key{41}{2}{6}{4}{\keyboard@hook@nng{\keyboard@altr}}
\keyboard@key{47}{2}{6}{4}{\keyboard@hook@nng{\keyboard@osr}}
\keyboard@key{53}{2}{6}{4}{\keyboard@hook@nng{\keyboard@menu}}
\keyboard@key{57.5}{2}{5}{4}{\keyboard@hook@nng{\keyboard@strgr}}

% Shift row:
\ifkeyboard@shiftissmall
\keyboard@key{2.5}{6}{5}{4}{\keyboard@hook@nng{\keyboard@miil}}
\keyboard@nkey{7}{6}{\keyboard@hook@nng{\keyboard@mivl}}
\else
\keyboard@key{4.5}{6}{9}{4}{\keyboard@hook@nng{\keyboard@miil}}
\fi
\keyboard@nkey{11}{6}{\keyboard@ue}
\keyboard@nkey{15}{6}{\keyboard@oe}
\keyboard@nkey{19}{6}{\keyboard@ae}
\keyboard@nkey{23}{6}{\keyboard@p}
\keyboard@nkey{27}{6}{\keyboard@z}
\keyboard@nkey{31}{6}{\keyboard@b}
\keyboard@nkey{35}{6}{\keyboard@m}
\keyboard@nkey{39}{6}{\keyboard@comma}
\keyboard@nkey{43}{6}{\keyboard@dot}
\keyboard@nkey{47}{6}{\keyboard@j}
\keyboard@key{54.5}{6}{11}{4}{\keyboard@hook@nng{\keyboard@miir}}

% Caps lock row:
\keyboard@key{3.5}{10}{7}{4}{\keyboard@hook@nng{\keyboard@miiil}}
\keyboard@nkey{9}{10}{\keyboard@hook@hr{\keyboard@u}}
\keyboard@nkey{13}{10}{\keyboard@hook@hr{\keyboard@i}}
\keyboard@nkey{17}{10}{\keyboard@hook@hr{\keyboard@a}}
\keyboard@nkey{21}{10}{\keyboard@hook@hr{\keyboard@hook@c{\keyboard@e}}}
\keyboard@nkey{25}{10}{\keyboard@o}
\keyboard@nkey{29}{10}{\keyboard@s}
\keyboard@nkey{33}{10}{\keyboard@hook@hr{\keyboard@hook@c{\keyboard@n}}}
\keyboard@nkey{37}{10}{\keyboard@hook@hr{\keyboard@r}}
\keyboard@nkey{41}{10}{\keyboard@hook@hr{\keyboard@t}}
\keyboard@nkey{45}{10}{\keyboard@hook@hr{\keyboard@d}}
\keyboard@nkey{49}{10}{\keyboard@y}
\ifkeyboard@enterisrectangular
\keyboard@key{55.5}{10}{9}{4}{\keyboard@hook@nng{\keyboard@enter}}
\else
\keyboard@nkey{53}{10}{\keyboard@hook@nng{\keyboard@miiir}}
\keyboard@ekey{\keyboard@hook@nng{\keyboard@enter}}
\fi

% Tab row:
\keyboard@key{3}{14}{6}{4}{\keyboard@hook@nng{\keyboard@tab}}
\keyboard@nkey{8}{14}{\keyboard@x}
\keyboard@nkey{12}{14}{\keyboard@v}
\keyboard@nkey{16}{14}{\keyboard@l}
\keyboard@nkey{20}{14}{\keyboard@c}
\keyboard@nkey{24}{14}{\keyboard@w}
\keyboard@nkey{28}{14}{\keyboard@k}
\keyboard@nkey{32}{14}{\keyboard@h}
\keyboard@nkey{36}{14}{\keyboard@g}
\keyboard@nkey{40}{14}{\keyboard@f}
\keyboard@nkey{44}{14}{\keyboard@q}
\keyboard@nkey{48}{14}{\keyboard@sz}
\ifkeyboard@enterisrectangular
\keyboard@nkey{52}{14}{\keyboard@hook@nng{\keyboard@tiii}}
\keyboard@key{57}{14}{6}{4}{\keyboard@hook@nng{\keyboard@miiir}}
\else
\keyboard@nkey{52}{14}{\keyboard@hook@nng{\keyboard@tiii}}
\fi

% number row:
\keyboard@nkey{2}{18}{\keyboard@hook@nng{\keyboard@ti}}
\keyboard@nkey{6}{18}{\keyboard@ni}
\keyboard@nkey{10}{18}{\keyboard@nii}
\keyboard@nkey{14}{18}{\keyboard@niii}
\keyboard@nkey{18}{18}{\keyboard@niv}
\keyboard@nkey{22}{18}{\keyboard@nv}
\keyboard@nkey{26}{18}{\keyboard@nvi}
\keyboard@nkey{30}{18}{\keyboard@nvii}
\keyboard@nkey{34}{18}{\keyboard@nviii}
\keyboard@nkey{38}{18}{\keyboard@nix}
\keyboard@nkey{42}{18}{\keyboard@zero}
\keyboard@nkey{46}{18}{\keyboard@dash}
\keyboard@nkey{50}{18}{\keyboard@hook@nng{\keyboard@tii}}
\keyboard@key{56}{18}{8}{4}{\keyboard@hook@nng{\keyboard@bsp}}

\end{scope}
\end{tikzpicture}
}

%\subsection{End user interface}
% The high level commands provided for the package user; most of them expect |key=value| input which is just passed to the internal macros.

%! \newcommand{\keyboardset}[1]…
%! \newcommand{\keyboard}[2]…

%The main command:
\newcommand*{\keyboard}[2][]{
  \pgfqkeys{/keyboard/style}{#1}
  \pgfqkeys{/keyboard/content}{#2}
  \keyboard@apply
}


% \end{macrocode}
% \iffalse
%</package>
% \fi
% \iffalse
%<*sample>
\documentclass{article}
\usepackage{lmodern,xltxtra}
\usepackage{keyboard}

\begin{document}
\title{A short sample document for the \texttt{keyboard} package}
\author{Dennis Heidsiek\and Christian Kluge}
\maketitle

\listoffigures

Normal Text: \keyboard{}

\begin{figure}
\centering
\keyboard[
  rectangularenter=true,
  smallshift=false
]{
  x = q,
  v = w,
  l = e,
  c = r,
  w = t,
  k = y,
  miil={big shift},
  enter = enter
}
\caption{A typical US style standard keyboard.}
\end{figure}

\begin{figure}
\centering
\keyboard[
  basesize = 0.18cm, % in total a little bit smaller
  thickness = 6pt, % much thicker margins!
  textscale = 0.9, % hence smaller text
  colour = blue,
  drawcolour = purple,
  fillcolour = pink!40,
  rectangularenter=false,
  smallshift=true
]{
  enter = {\fontspec{Linux Biolinum O}\Huge ☺},
  space = {Lost in Space …}
}
\caption{A ‘girlie style’ keyboard.}
\end{figure}

\begin{figure}
\centering
\fontspec{Linux Biolinum O}
\keyboard[
  thickness = 0.6pt,
  basesize = 0.18cm,
  textscale = 1.1,
  color = black,
  drawcolor = black,
  fillcolor = white,
  centerhook = \underline,
  homerowhook = \textbf,
  nonneoglyphhook = {\scriptsize\textcolor{black!70}},
  rectangularenter=false,
  smallshift=true
]{
  strgl=Strg,
  osl=OS,
  altl=Alt,
  space={␣ or ⍽},
  altr=Alt,
  osr=OS,
  menu={Me},
  strgr=Strg,
  miil=M2,
  mivl=M4,
  ue=ü,
  oe=ö,
  ae=ä,
  p=p,
  z=z,
  b=b,
  m=m,
  comma={,},
  dot={.},
  j=j,
  miir=M2,
  miiil=M3,
  u=u,
  i=i,
  a=a,
  e=e,
  o=o,
  s=s,
  n=n,
  r=r,
  t=t,
  d=d,
  y=y,
  miiir=M3,
  tab=Tab,
  x=x,
  v=v,
  l=l,
  c=c,
  w=w,
  k=k,
  h=h,
  g=g,
  f=f,
  q=q,
  sz=ß,
  tiii=T3,
  enter=LF,
  ti=T1,
  ni=1,
  nii=2,
  niii=3,
  niv=4,
  nv=5,
  nvi=6,
  nvii=7,
  nviii=8,
  nix=9,
  zero=0,
  dash={-},
  tii=T2,
  bsp=Backsp
}
\keyboard[% “inverted” style suggested by Frank Mayer
  textscale = 1.4,
  thickness = 0.8pt,
  color = white,
  drawcolor = black!25,
  fillcolor = black!95,
  nonneoglyphhook = {\scriptsize\textcolor{white!70}}
]{}

\keyboard[% “hackerstyle” modification
  color = green!70!black,
  centerhook = \underline,
  homerowhook = \textbf,
  nonneoglyphhook = {\scriptsize\textcolor{green!40!black}},
  rectangularenter=true,
  smallshift=false
]{}
\caption{This is a serious keyboard in three different styles.}
\end{figure}

\end{document}
%</sample>
% \fi
% \Finale
% \endinput